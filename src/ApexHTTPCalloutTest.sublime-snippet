<snippet>
    <content><![CDATA[
/*  
 *  ${1:ResponseGeneratorClassName}
 */

/*-- Mock Response Generator Class start --*/ 

@isTest
global class ${1:ResponseGeneratorClassName} implements HttpCalloutMock {
    
    // Interface method
    global HTTPResponse respond(HTTPRequest req) {
        
        // Send a mock response for a specific endpoint.
        System.assertEquals(System.Label.${2:Endpoint_URL}, req.getEndpoint());
        System.assertEquals('GET', req.getMethod());
        
        // Generate a fake response
        HttpResponse res = new HttpResponse();
        res.setHeader('Content-Type', 'application/json');
        res.setBody('{"foo":"bar"}');
        res.setStatusCode(200);
        return res;
    }
}

/*-- Mock Response Generator Class end --*/ 

/*-- Test Class start --*/ 

/*  
 *  ${3:TestClassName}
 *  @description : ${4:A description of the Test Class}
 */

@isTest
private class ${3:TestClassName} {
    static testMethod void ${4:TestClassName}() {
        
        // Set mock callout class 
        Test.setMock(HttpCalloutMock.class, new ${1:ResponseGeneratorClassName}());
        
        // Call method to test
        HttpResponse res = ${5:RestCalloutClassName}.${6:RestCalloutMethodName}();
        
        // Verify response received
        String contentType = res.getHeader('Content-Type');
        System.assert(contentType == 'application/json');
        String actualValue = res.getBody();
        String expectedValue = '{"foo":"bar"}';
        System.assertEquals(actualValue, expectedValue);
        System.assertEquals(200, res.getStatusCode());
    }
}

/*-- Test Class end --*/

]]></content>
    <tabTrigger>HttpCalloutTest</tabTrigger>
    <description>Weave Test Class for HTTP Callout Class</description>
    <scope>source.apex</scope>
</snippet>
